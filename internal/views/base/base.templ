package base

import "fmt"

type BaseData struct {
	Body  templ.Component
	CSRF  string
	Title string
}

func GetCtxEnv(ctx context.Context) string {
	if env, ok := ctx.Value("env").(string); ok {
		return env
	}
	return ""
}

templ Base(data BaseData) {
	<!DOCTYPE html>
	<html data-theme="corporate">
		<head>
			<title>{ data.Title }</title>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link href="/static/css/styles.css" rel="stylesheet"/>
			<link rel="icon" href="/static/images/favicon.ico"/>
			<script type="text/javascript" src="/static/js/htmx.min.js"></script>
			<script src="https://unpkg.com/htmx.org/dist/ext/sse.js"></script>
			<script src="https://unpkg.com/htmx.org/dist/ext/ws.js"></script>
			<script src="https://unpkg.com/htmx.org/dist/ext/alpine-morph.js"></script>
			// <script type="text/javascript" src="/static/js/hyperscript.min.js"></script>
			<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
			<script type="text/javascript">
				// htmx.logAll();
		
			</script>
		</head>
		<body hx-headers={ fmt.Sprintf("{\"X-CSRF-Token\": \"%s\"}", data.CSRF) } hx-boost="true">
			<div id="flashmessage"></div>
			<main>
				{! data.Body }
			</main>
			// include the following for that sweet hmr if we are on dev local
			if GetCtxEnv(ctx) == "dev_local" {
				<script> 
				let _refreshTime = "";
				document.body.addEventListener('htmx:sseMessage', function (evt) {
					if(_refreshTime === "") {
						_refreshTime = evt.detail.data
					}	
					if(_refreshTime  !== event.detail.data){
						console.log("Reload yo")
						window.location.reload()
					}								
				});
				</script>
				<div
 					class=""
 					hx-ext="sse"
 					sse-connect="/hmr"
 					sse-swap="message"
				></div>
			}
		</body>
	</html>
}
